@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix owl: <http://www.w3.org/2002/07/owl#> . 
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> . 
@prefix ottr: <http://ns.ottr.xyz/0.4/> . 
@prefix log: <https://w3id.org/sepses/ns/log#> . 
@prefix logex: <https://w3id.org/sepses/ns/logex#> . 
@prefix lid: <https://w3id.org/sepses/id/log/> . 
@prefix lxid: <https://w3id.org/sepses/id/logex/> . 
@prefix svid: <https://w3id.org/sepses/id/service/> . 
@prefix cee: <https://w3id.org/sepses/cee#> . 

### Basic OTTR templates 

lxid:OttrTemplate_event[ottr:IRI ?id, ottr:IRI ?hostUrl, xsd:string ?hostString, xsd:dateTime ?timestamp, xsd:string ?message, ottr:IRI ?template, ottr:IRI ?logSource] :: { 
	ottr:Triple(?id,rdf:type,log:Event), 
	ottr:Triple(?id,log:hasSourceHost,?hostUrl), 
	ottr:Triple(?hostUrl,rdf:type,log:Host), 
	ottr:Triple(?hostUrl,log:host,?hostString), 
	ottr:Triple(?id,log:time,?timestamp), 
	ottr:Triple(?id,log:msg,?message), 
	ottr:Triple(?id,logex:template,?template), 
	ottr:Triple(?id,log:hasSource,?logSource)
} . 

lxid:OttrTemplate_unix[ottr:IRI ?id, ottr:IRI ?hostUrl, xsd:string ?hostString, xsd:dateTime ?timestamp, xsd:string ?message, ottr:IRI ?template, ottr:IRI ?logSource, xsd:string ?pname, xsd:string ?pid] :: { 
	lxid:OttrTemplate_event(?id,?hostUrl,?hostString,?timestamp,?message,?template,?logSource), 
	ottr:Triple(?id,log:pid,?pid), 
	ottr:Triple(?id,log:pname,?pname)
} . 

lxid:OttrTemplate_ftp[ottr:IRI ?id, ottr:IRI ?hostUrl, xsd:string ?hostString, xsd:dateTime ?timestamp, xsd:string ?message, ottr:IRI ?template, ottr:IRI ?logSource, xsd:string ?pid] :: { 
	lxid:OttrTemplate_event(?id,?hostUrl,?hostString,?timestamp,?message,?template,?logSource), 
	ottr:Triple(?id,log:pid,?pid)
} . 

lxid:OttrTemplate_audit[ottr:IRI ?id, ottr:IRI ?hostUrl, xsd:string ?hostString, xsd:dateTime ?timestamp, xsd:string ?message, ottr:IRI ?template, ottr:IRI ?logSource, xsd:string ?cmd] :: { 
	lxid:OttrTemplate_event(?id,?hostUrl,?hostString,?timestamp,?message,?template,?logSource), 
	ottr:Triple(?id,log:cmd,?cmd)
} . 

lxid:OttrTemplate_apache[ottr:IRI ?id, ottr:IRI ?hostUrl, xsd:string ?hostString, xsd:dateTime ?timestamp, xsd:string ?message, ottr:IRI ?template, ottr:IRI ?logSource, ottr:IRI ?ip, xsd:string ?ipString] :: { 
	lxid:OttrTemplate_event(?id,?hostUrl,?hostString,?timestamp,?message,?template,?logSource), 
	ottr:Triple(?id,log:hasIPv4,?ip), 
	ottr:Triple(?ip,rdf:type,log:IPv4), 
	ottr:Triple(?ip,log:ipv4,?ipString)
} . 

lxid:OttrTemplate_unknown[ottr:IRI ?id, xsd:string ?unknown] :: { 
	ottr:Triple(?id,log:contain,?unknown)
} . 

lxid:OttrTemplate_Source[ottr:IRI ?logSource, xsd:string ?logSourceString, ottr:IRI ?sourceType, xsd:string ?sourceTypeString, ottr:IRI ?logFormat, xsd:string ?logFormatString] :: { 
	ottr:Triple(?logSource,rdf:type,log:Source), 
	ottr:Triple(?logSource,rdfs:label,?logSourceString), 
	ottr:Triple(?logSource,log:hasSourceType,?sourceType), 
	ottr:Triple(?sourceType,rdf:type,log:SourceType), 
	ottr:Triple(?sourceType,rdfs:label,?sourceTypeString), 
	ottr:Triple(?sourceType,log:hasFormat,?logFormat), 
	ottr:Triple(?logFormat,rdf:type,log:Format), 
	ottr:Triple(?logFormat,rdfs:label,?logFormatString)
} . 


### Parameter OTTR templates 

lxid:OttrTemplate_ip[ottr:IRI ?id, ottr:IRI ?ip, xsd:string ?ipString] :: { 
	ottr:Triple(?id,log:hasIPv4,?ip), 
	ottr:Triple(?ip,rdf:type,log:IPv4), 
	ottr:Triple(?ip,log:ipv4,?ipString)
} . 

lxid:OttrTemplate_port[ottr:IRI ?id, ottr:IRI ?port, ottr:IRI ?linkedPort, xsd:integer ?portInt] :: { 
	ottr:Triple(?id,log:hasPort,?port), 
	ottr:Triple(?port,rdf:type,log:Port), 
	ottr:Triple(?port,log:port,?portInt), 
	ottr:Triple(?port,log:linkedPortService,?linkedPort)
} . 

lxid:OttrTemplate_host[ottr:IRI ?id, ottr:IRI ?obj, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:hasHost,?obj), 
	ottr:Triple(?obj,rdf:type,log:Host), 
	ottr:Triple(?obj,log:host,?objString)
} . 

lxid:OttrTemplate_domain[ottr:IRI ?id, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:domainName,?objString)
} . 

lxid:OttrTemplate_user[ottr:IRI ?id, ottr:IRI ?obj, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:hasUser,?obj), 
	ottr:Triple(?obj,rdf:type,log:User), 
	ottr:Triple(?obj,log:user.name,?objString)
} . 

lxid:OttrTemplate_pid[ottr:IRI ?id, xsd:integer ?pid] :: { 
	ottr:Triple(?id,log:pid,?pid)
} . 

lxid:OttrTemplate_userPassword[ottr:IRI ?id, ottr:IRI ?obj, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:hasUser,?obj), 
	ottr:Triple(?obj,rdf:type,log:User), 
	ottr:Triple(?obj,log:user.name,?objString)
} . 

lxid:OttrTemplate_email[ottr:IRI ?id, xsd:string ?email] :: { 
	ottr:Triple(?id, log:email, ?email)
} . 

lxid:OttrTemplate_path[ottr:IRI ?id, ottr:IRI ?path, xsd:string ?pathString] :: { 
	ottr:Triple(?id,log:hasFile,?path), 
	ottr:Triple(?path,rdf:type,log:File), 
	ottr:Triple(?path,log:file.path,?pathString)
} . 

lxid:OttrTemplate_filePath[ottr:IRI ?id, ottr:IRI ?path, xsd:string ?pathString, xsd:string ?fileString] :: { 
	ottr:Triple(?id,log:hasFile,?path), 
	ottr:Triple(?path,rdf:type,log:File), 
	ottr:Triple(?path,log:file.path,?pathString), 
	ottr:Triple(?path,log:file.name,?fileString)
} . 

lxid:OttrTemplate_URL[ottr:IRI ?id, ottr:IRI ?url, xsd:string ?urlString] :: { 
	ottr:Triple(?id,log:hasURL,?url), 
	ottr:Triple(?url,rdf:type,log:URL), 
	ottr:Triple(?url,log:url.url,?urlString)
} . 

lxid:OttrTemplate_urlWithParameters[ottr:IRI ?id, ottr:IRI ?url, xsd:string ?urlString, xsd:string ?paramString] :: { 
	ottr:Triple(?id,log:hasURL,?url), 
	ottr:Triple(?url,rdf:type,log:URL), 
	ottr:Triple(?url,log:url.url,?urlString), 
	ottr:Triple(?url,log:url.param,?paramString)
} . 

lxid:OttrTemplate_ipWithPrefix[ottr:IRI ?id, ottr:IRI ?ip, xsd:string ?ipString] :: { 
	ottr:Triple(?id,log:hasIPv4,?ip), 
	ottr:Triple(?ip,rdf:type,log:IPv4), 
	ottr:Triple(?ip,log:ipv4,?ipString)
} . 

lxid:OttrTemplate_ipWithPort[ottr:IRI ?id, ottr:IRI ?ip, xsd:string ?ipString, ottr:IRI ?port, ottr:IRI ?linkedPort, xsd:integer ?portInt] :: { 
	ottr:Triple(?id,log:hasIPv4,?ip), 
	ottr:Triple(?ip,rdf:type,log:IPv4), 
	ottr:Triple(?ip,log:ipv4,?ipString), 
	ottr:Triple(?id,log:hasPort,?port), 
	ottr:Triple(?port,rdf:type,log:Port), 
	ottr:Triple(?port,log:port,?portInt), 
	ottr:Triple(?port,log:linkedPortService,?linkedPort)
} . 

lxid:OttrTemplate_userLogin[ottr:IRI ?id, ottr:IRI ?obj, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:hasUser,?obj), 
	ottr:Triple(?obj,rdf:type,log:User), 
	ottr:Triple(?obj,log:user.name,?objString)
} . 

lxid:OttrTemplate_loginForUser[ottr:IRI ?id, ottr:IRI ?obj, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:hasUser,?obj), 
	ottr:Triple(?obj,rdf:type,log:User), 
	ottr:Triple(?obj,log:user.name,?objString)
} . 

lxid:OttrTemplate_sentToUser[ottr:IRI ?id, ottr:IRI ?obj, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:hasUser,?obj), 
	ottr:Triple(?obj,rdf:type,log:User), 
	ottr:Triple(?obj,log:user.name,?objString)
} . 

lxid:OttrTemplate_fromUser[ottr:IRI ?id, ottr:IRI ?obj, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:hasUser,?obj), 
	ottr:Triple(?obj,rdf:type,log:User), 
	ottr:Triple(?obj,log:user.name,?objString)
} . 

lxid:OttrTemplate_userImap[ottr:IRI ?id, ottr:IRI ?obj, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:hasUser,?obj), 
	ottr:Triple(?obj,rdf:type,log:User), 
	ottr:Triple(?obj,log:user.name,?objString)
} . 

lxid:OttrTemplate_group[ottr:IRI ?id, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:group,?objString)
} . 

lxid:OttrTemplate_mac[ottr:IRI ?id, xsd:string ?mac] :: { 
	ottr:Triple(?id,log:mac,?mac)
} . 

lxid:OttrTemplate_ciscoMac[ottr:IRI ?id, xsd:string ?mac] :: { 
	ottr:Triple(?id,log:ciscoMac,?mac)
} . 

lxid:OttrTemplate_ipv6[ottr:IRI ?id, ottr:IRI ?ip, xsd:string ?ipString] :: { 
	ottr:Triple(?id,log:hasIPv6,?ip), 
	ottr:Triple(?ip,rdf:type,log:IPv6), 
	ottr:Triple(?ip,log:ipv6,?ipString)
} . 

lxid:OttrTemplate_exe[ottr:IRI ?id, xsd:string ?objString] :: { 
	ottr:Triple(?id,log:cmd,?objString)
} . 


### LogEventTemplate OTTR templates 

lxid:LogEventTemplate_e962e6c3[ottr:IRI ?id, ?hostUrl0, ?hostString1, ?timestamp2, ?message3, ?template4, ?logSource5, ?pname6, ?pid7, ?unknown9, ?obj10, ?objString11, ?unknown12] :: { 
	lxid:OttrTemplate_unix(?id,?hostUrl0,?hostString1,?timestamp2,?message3,?template4,?logSource5,?pname6,?pid7), 
	lxid:OttrTemplate_unknown(?id,?unknown9), 
	lxid:OttrTemplate_user(?id,?obj10,?objString11), 
	lxid:OttrTemplate_unknown(?id,?unknown12)
} . 

lxid:LogEventTemplate_c61b52d9[ottr:IRI ?id, ?hostUrl0, ?hostString1, ?timestamp2, ?message3, ?template4, ?logSource5, ?pname6, ?pid7, ?unknown9, ?obj10, ?objString11] :: { 
	lxid:OttrTemplate_unix(?id,?hostUrl0,?hostString1,?timestamp2,?message3,?template4,?logSource5,?pname6,?pid7), 
	lxid:OttrTemplate_unknown(?id,?unknown9), 
	lxid:OttrTemplate_user(?id,?obj10,?objString11)
} . 

lxid:LogEventTemplate_58c5527c[ottr:IRI ?id, ?hostUrl0, ?hostString1, ?timestamp2, ?message3, ?template4, ?logSource5, ?pname6, ?pid7, ?unknown9, ?unknown10, ?unknown11, ?unknown12, ?obj13, ?objString14, ?ip15, ?ipString16, ?obj17, ?objString18] :: { 
	lxid:OttrTemplate_unix(?id,?hostUrl0,?hostString1,?timestamp2,?message3,?template4,?logSource5,?pname6,?pid7), 
	lxid:OttrTemplate_unknown(?id,?unknown9), 
	lxid:OttrTemplate_unknown(?id,?unknown10), 
	lxid:OttrTemplate_unknown(?id,?unknown11), 
	lxid:OttrTemplate_unknown(?id,?unknown12), 
	lxid:OttrTemplate_user(?id,?obj13,?objString14), 
	lxid:OttrTemplate_ip(?id,?ip15,?ipString16), 
	lxid:OttrTemplate_user(?id,?obj17,?objString18)
} . 

